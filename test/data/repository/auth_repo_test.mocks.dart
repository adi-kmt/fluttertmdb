// Mocks generated by Mockito 5.4.2 from annotations
// in fluttertmdb/test/data/repository/auth_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fluttertmdb/common/response_wrapper.dart' as _i5;
import 'package:fluttertmdb/data/sources/local/auth_local_source.dart' as _i3;
import 'package:fluttertmdb/data/sources/remote/firebase_auth_source.dart'
    as _i8;
import 'package:fluttertmdb/domain/models/user_model_entity.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:shared_preferences/shared_preferences.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPreferences_0 extends _i1.SmartFake
    implements _i2.SharedPreferences {
  _FakeSharedPreferences_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthLocalSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalSource extends _i1.Mock implements _i3.AuthLocalSource {
  MockAuthLocalSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SharedPreferences get sharedPreferences => (super.noSuchMethod(
        Invocation.getter(#sharedPreferences),
        returnValue: _FakeSharedPreferences_0(
          this,
          Invocation.getter(#sharedPreferences),
        ),
      ) as _i2.SharedPreferences);
  @override
  set sharedPreferences(_i2.SharedPreferences? _sharedPreferences) =>
      super.noSuchMethod(
        Invocation.setter(
          #sharedPreferences,
          _sharedPreferences,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<_i5.ResponseWrapper<dynamic>> clearLoggedInUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearLoggedInUser,
          [],
        ),
        returnValue: _i4.Future<_i5.ResponseWrapper<dynamic>>.value(
            _i6.dummyValue<_i5.ResponseWrapper<dynamic>>(
          this,
          Invocation.method(
            #clearLoggedInUser,
            [],
          ),
        )),
      ) as _i4.Future<_i5.ResponseWrapper<dynamic>>);
  @override
  _i4.Future<_i5.ResponseWrapper<dynamic>> setLoggedInUser(
          _i7.UserModel? userModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLoggedInUser,
          [userModel],
        ),
        returnValue: _i4.Future<_i5.ResponseWrapper<dynamic>>.value(
            _i6.dummyValue<_i5.ResponseWrapper<dynamic>>(
          this,
          Invocation.method(
            #setLoggedInUser,
            [userModel],
          ),
        )),
      ) as _i4.Future<_i5.ResponseWrapper<dynamic>>);
  @override
  _i4.Future<_i5.ResponseWrapper<_i7.UserModel>> getCurrentUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i4.Future<_i5.ResponseWrapper<_i7.UserModel>>.value(
            _i6.dummyValue<_i5.ResponseWrapper<_i7.UserModel>>(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
      ) as _i4.Future<_i5.ResponseWrapper<_i7.UserModel>>);
}

/// A class which mocks [FirebaseAuthSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthSource extends _i1.Mock
    implements _i8.FirebaseAuthSource {
  MockFirebaseAuthSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i5.ResponseWrapper<_i7.UserModel>> login(_i7.UserModel? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [user],
        ),
        returnValue: _i4.Future<_i5.ResponseWrapper<_i7.UserModel>>.value(
            _i6.dummyValue<_i5.ResponseWrapper<_i7.UserModel>>(
          this,
          Invocation.method(
            #login,
            [user],
          ),
        )),
      ) as _i4.Future<_i5.ResponseWrapper<_i7.UserModel>>);
  @override
  _i4.Future<_i5.ResponseWrapper<bool>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<_i5.ResponseWrapper<bool>>.value(
            _i6.dummyValue<_i5.ResponseWrapper<bool>>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i4.Future<_i5.ResponseWrapper<bool>>);
}
